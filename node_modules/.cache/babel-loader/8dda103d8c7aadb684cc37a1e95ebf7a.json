{"ast":null,"code":"var _jsxFileName = \"E:\\\\visual studio\\\\Reactextra\\\\Assignment-02\\\\src\\\\pages\\\\search\\\\ResultList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport useFetch from \"../../hooks/use-fetch\";\nconst ResultList = props => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  useFetch(`https://api.themoviedb.org/3/search/movie?api_key=b10f26ad1365b480abc56ae5b5d98080&language=en-US&query=${props.value}&page=1&include_adult=false`, movieFromSearch);\n  function movieFromSearch(movie) {\n    console.log(movie);\n    setSearchMovie(movie);\n  }\n  const listSearch = searchMovie.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      id: movie.id,\n      src: `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n      alt: movie.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, listSearch);\n};\nexport default ResultList;","map":{"version":3,"names":["React","useState","useEffect","useFetch","ResultList","props","searchMovie","setSearchMovie","value","movieFromSearch","movie","console","log","listSearch","map","id","poster_path","title"],"sources":["E:/visual studio/Reactextra/Assignment-02/src/pages/search/ResultList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/use-fetch\";\r\n\r\nconst ResultList = (props) => {\r\n  const [searchMovie, setSearchMovie] = useState([]);\r\n\r\n  useFetch(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=b10f26ad1365b480abc56ae5b5d98080&language=en-US&query=${props.value}&page=1&include_adult=false`,\r\n    movieFromSearch\r\n  );\r\n\r\n  function movieFromSearch(movie) {\r\n    console.log(movie);\r\n    setSearchMovie(movie);\r\n  }\r\n\r\n  const listSearch = searchMovie.map((movie) => {\r\n    return (\r\n      <img\r\n        key={movie.id}\r\n        id={movie.id}\r\n        src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\r\n        alt={movie.title}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div>{listSearch}</div>;\r\n};\r\n\r\nexport default ResultList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElDE,QAAQ,CACL,2GAA0GE,KAAK,CAACG,KAAM,6BAA4B,EACnJC,eAAe,CAChB;EAED,SAASA,eAAe,CAACC,KAAK,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBH,cAAc,CAACG,KAAK,CAAC;EACvB;EAEA,MAAMG,UAAU,GAAGP,WAAW,CAACQ,GAAG,CAAEJ,KAAK,IAAK;IAC5C,oBACE;MACE,GAAG,EAAEA,KAAK,CAACK,EAAG;MACd,EAAE,EAAEL,KAAK,CAACK,EAAG;MACb,GAAG,EAAG,uCAAsCL,KAAK,CAACM,WAAY,EAAE;MAChE,GAAG,EAAEN,KAAK,CAACO,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACjB;EAEN,CAAC,CAAC;EAEF,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAMJ,UAAU,CAAO;AAChC,CAAC;AAED,eAAeT,UAAU"},"metadata":{},"sourceType":"module"}
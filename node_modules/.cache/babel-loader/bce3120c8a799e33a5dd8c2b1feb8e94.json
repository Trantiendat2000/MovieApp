{"ast":null,"code":"var _jsxFileName = \"E:\\\\visual studio\\\\Reactextra\\\\Assignment-02\\\\src\\\\pages\\\\browse\\\\TrailerMovie.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Youtube from \"react-youtube\";\nconst TrailerMovie = props => {\n  const [hasVideo, setHasVideo] = useState(false);\n  const [getTrailer, setGetTrailer] = useState(props.trailerMovie.backdrop_path);\n  useEffect(() => {\n    const fetchTrailer = async () => {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${props.trailerMovie.id}/videos?api_key=b10f26ad1365b480abc56ae5b5d98080`);\n      if (!response.ok) {\n        throw new Error(\"Fetch to failed\");\n      }\n      const data = await response.json();\n      console.log(data);\n      let typeOfVideo = data.results.filter(type => {\n        return type.type = \"\";\n      });\n      console.log(typeOfVideo);\n    };\n    fetchTrailer().catch(error => {\n      alert(error.message);\n    });\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  });\n};\nexport default TrailerMovie;","map":{"version":3,"names":["React","useEffect","useState","Youtube","TrailerMovie","props","hasVideo","setHasVideo","getTrailer","setGetTrailer","trailerMovie","backdrop_path","fetchTrailer","response","fetch","id","ok","Error","data","json","console","log","typeOfVideo","results","filter","type","catch","error","alert","message"],"sources":["E:/visual studio/Reactextra/Assignment-02/src/pages/browse/TrailerMovie.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Youtube from \"react-youtube\";\r\n\r\nconst TrailerMovie = (props) => {\r\n  const [hasVideo, setHasVideo] = useState(false);\r\n  const [getTrailer, setGetTrailer] = useState(\r\n    props.trailerMovie.backdrop_path\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchTrailer = async () => {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${props.trailerMovie.id}/videos?api_key=b10f26ad1365b480abc56ae5b5d98080`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Fetch to failed\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      let typeOfVideo = data.results.filter((type) => {\r\n        return (type.type = \"\");\r\n      });\r\n      console.log(typeOfVideo);\r\n    };\r\n\r\n    fetchTrailer().catch((error) => {\r\n      alert(error.message);\r\n    });\r\n  }, [props]);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default TrailerMovie;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,eAAe;AAEnC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAC1CG,KAAK,CAACK,YAAY,CAACC,aAAa,CACjC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,YAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,sCAAqCT,KAAK,CAACK,YAAY,CAACK,EAAG,kDAAiD,CAC9G;MAED,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAEjB,IAAII,WAAW,GAAGJ,IAAI,CAACK,OAAO,CAACC,MAAM,CAAEC,IAAI,IAAK;QAC9C,OAAQA,IAAI,CAACA,IAAI,GAAG,EAAE;MACxB,CAAC,CAAC;MACFL,OAAO,CAACC,GAAG,CAACC,WAAW,CAAC;IAC1B,CAAC;IAEDV,YAAY,EAAE,CAACc,KAAK,CAAEC,KAAK,IAAK;MAC9BC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACxB,KAAK,CAAC,CAAC;EAEX,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAW;AACpB,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module"}